Address translation:

Addresses are strings of bits. They can be divided in two parts: the PN that can be either physical (PPN) or virtual (VPN) and the pageoffset.
TLB translates VPN to PPN and based on which one of them is provied by the cache two models are defined:
Virtually-Addressed-Cache(VAC) VPN is provided,
or Physically-Addressed Cache (PAC) the other way around.
The VAP is faster than PAC because it doesn't have to wait for the TLB, 
but, whenever a switch context occurs, the cache must be cleaned up and its data must be stored in main memory, 
because virtual address are the same between processes, even if the information they're referring to are totally unreleated.

The model can be speed up by dividing the process of checking for data in cache in two steps:
at first by looking at the entry of the cache that matches the index, information stored in the offset bits untouched by TLB,
then, once the TLB has translated VPN to PPN, check if the entry found earlier has the same PPA of 
the one just translated.
This is possible if and only if the cache index bits are a subset of page offset bits.


Memory:
The memory model adopted is memory mapped I/O therefore there's space saved for input and output respectively.
I/0 must be separated from normal instructions because they interact with peripherics and not main memory.
Two type of access: polling(synchronous) and interrupts(asynchronous).
-Polling: periodically the processor reads the register associated with a specific I/O device.
-Interrupts: processor initiates a request, then moves to other work. When the request is serviced, the I/O device interrupts the processor notifying to read the content.
For example, we read n characters from disk. In the first case, every i seconds the processor reads the characters serviced from the disk, if's not already set it has to wait till it' served.

In the second one, the monitor notifies when a character is ready to be read, so the processor interacts with the periphery only if there's something interesting.
Example: display a character.
Polling: the first 8 bits from 0-7 are used to store a character, the 31-st is set to one  when the character has been displayed, so the current character can be overwritten, otherwise is zero.

In interrupt-based I/O model the format is the same: the lower eight bits store the character and the thirty-first stores a flag. 
In this case, the interrupt occures when the highest is set to one and the character must be read and flag set to zero.


